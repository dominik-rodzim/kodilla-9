* {
  box-sizing: border-box;
}

@font-face {
  font-family: 'Glyphter';
  src: url('Glyphter.eot') format('eot');
  src: url('Glyphter.woff') format('woff'),
  url('Glyphter.ttf') format('truetype'),
  url('Glyphter.svg') format('svg');
  font-style: normal;
  font-weight: normal;
}

.scroll-wrapper {
  display: block;
  width: 100%;
  overflow-x: auto;
}

.scroll-wrapper table {
  width: 100%;
  max-width: 100%;
}

.clearfix {
  &::before, &::after {
    content: "";
    clear: both;
    display: table;
  }
}

.container {
  width: 100%;
  max-width: 1170px;
  margin: 0 auto;
  padding-left: 15px;
  padding-right: 15px;
}

.container-fluid {
  width: 100%;
  padding-left: 15px;
  padding-right: 15px;
}

.container-inner {
  width: 100%;
  max-width: 700px;
  margin: 0 auto;
  padding-left: 15px;
  padding-right: 15px;	
}

.row {
  display: flex;
  flex-wrap: wrap;
}

@mixin grid($prefix) {
  @for $i from 1 through 12 {
    .col-#{$prefix}-#{$i} {
      $width: 100% / 12 * $i;
      flex: 0 0 $width;
      max-width: $width;
    }
  }
}

@media(max-width: 767px) {
  @include grid('sm');
}

@media(min-width: 768px) {
  @include grid('md');
}

@media(min-width: 992px) {
  @include grid('lg');
}

@media(min-width: 1200px) {
  @include grid('xl');
}

$break-lg: 1200px;
$break-md: 992px;
$break-sm: 768px;

@mixin respond($breakpoint) {
    @if $breakpoint == break-sm {
        @media only screen and (max-width: $break-sm) { @content };
    }
    @if $breakpoint == break-md {
        @media only screen and (max-width: $break-md) { @content };
    }
    @if $breakpoint == break-lg {
        @media only screen and (max-width: $break-lg) { @content };
    }
}

